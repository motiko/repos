{"version":3,"sources":["ForkIcon.js","RepositoriesList.js","github.js","BranchesList.js","RepositoriesControllers.js","App.js","serviceWorker.js","index.js"],"names":["ForkIcon","react_default","a","createElement","SvgIcon_default","d","withStyles","theme","loading","marginTop","spacing","unit","_ref","repositories","classes","history","Grid_default","container","justify","length","CircularProgress_default","size","className","item","xs","md","List_default","map","repo","ListItem_default","button","key","name","onClick","push","concat","full_name","ListItemText_default","primary","secondary","language","ListItemSecondaryAction_default","IconButton_default","disabled","forks","Star_default","stars","orgRepositories","_x","_orgRepositories","apply","this","arguments","_callee","organization","parsedResponse","repos","regenerator_default","wrap","_context","prev","next","getJson","sent","r","stargazers_count","forks_count","abrupt","stop","repoBrnaches","_x2","_repoBrnaches","_callee2","fullName","branches","_context2","b","_callee3","path","response","_context3","fetch","ok","json","Error","statusText","BranchesList","state","isLaoding","errorMessage","showError","hideError","_this","setState","fetchBranches","props","match","params","repository","GitHub","t0","message","isLoading","_this$state","branch","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","SnackbarContent_default","error","aria-describedby","id","action","aria-label","close","Close_default","Component","backgroundColor","palette","dark","ALL_LANGUAGES","organizations","reposSelector","sort","sortedRepos","selectedLanguage","filter","filteredRepos","languagesSelector","_ref2","Array","from","Set","uniqueLanguages","RepositoriesControllers","selectedOrg","setOrganization","event","setDisplayedRepos","target","value","fetchRepositories","setProcessedRepos","setLanguage","Fragment","FormControl_default","Select_default","onChange","org","MenuItem_default","formControl","marginLeft","App","displayedRepos","_this2","react_router_dom","AppBar_default","position","Toolbar_default","react_router","render","goBack","ArrowBack_default","Typography_default","variant","gutterBottom","exact","src_RepositoriesControllers","Object","assign","src_BranchesList","src_RepositoriesList","Boolean","window","location","hostname","createMuiTheme","typography","useNextVariants","blue","pink","ReactDOM","styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb85ea38.chunk.js","sourcesContent":["import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport default function ForkIcon() {\n  return <SvgIcon>\n    <path d=\"M6,2A3,3 0 0,1 9,5C9,6.28 8.19,7.38 7.06,7.81C7.15,8.27 7.39,8.83 8,9.63C9,10.92 11,12.83 12,14.17C13,12.83 15,10.92 16,9.63C16.61,8.83 16.85,8.27 16.94,7.81C15.81,7.38 15,6.28 15,5A3,3 0 0,1 18,2A3,3 0 0,1 21,5C21,6.32 20.14,7.45 18.95,7.85C18.87,8.37 18.64,9 18,9.83C17,11.17 15,13.08 14,14.38C13.39,15.17 13.15,15.73 13.06,16.19C14.19,16.62 15,17.72 15,19A3,3 0 0,1 12,22A3,3 0 0,1 9,19C9,17.72 9.81,16.62 10.94,16.19C10.85,15.73 10.61,15.17 10,14.38C9,13.08 7,11.17 6,9.83C5.36,9 5.13,8.37 5.05,7.85C3.86,7.45 3,6.32 3,5A3,3 0 0,1 6,2M6,4A1,1 0 0,0 5,5A1,1 0 0,0 6,6A1,1 0 0,0 7,5A1,1 0 0,0 6,4M18,4A1,1 0 0,0 17,5A1,1 0 0,0 18,6A1,1 0 0,0 19,5A1,1 0 0,0 18,4M12,18A1,1 0 0,0 11,19A1,1 0 0,0 12,20A1,1 0 0,0 13,19A1,1 0 0,0 12,18Z\" />\n  </SvgIcon>;\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport ForkIcon from \"./ForkIcon\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  loading: {\n    marginTop: theme.spacing.unit * 8\n  }\n});\n\nfunction RepositoriesList({ repositories, classes, history }) {\n  return (\n    <Grid container justify=\"center\">\n      {repositories.length === 0 ? (\n        <CircularProgress size={80} className={classes.loading} />\n      ) : (\n        <Grid item xs={12} md={6}>\n          <List>\n            {repositories.map(repo => (\n              <ListItem\n                button\n                key={repo.name}\n                onClick={() => {\n                  history.push(`/${repo.full_name}`);\n                }}\n              >\n                <ListItemText primary={repo.name} secondary={repo.language} />\n                <ListItemSecondaryAction>\n                  <IconButton disabled={true}>\n                    <ForkIcon />\n                    {repo.forks}\n                  </IconButton>\n                  <IconButton disabled={true}>\n                    <StarIcon />\n                    {repo.stars}\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\nexport default withStyles(styles)(RepositoriesList);\n","export async function orgRepositories(organization) {\n  const parsedResponse = await getJson(`/orgs/${organization}/repos`);\n  const repos = parsedResponse.map(r => ({\n    name: r.name,\n    full_name: r.full_name,\n    stars: r.stargazers_count,\n    language: r.language || \"N/A\",\n    forks: r.forks_count\n  }));\n  return repos;\n}\n\nexport async function repoBrnaches(fullName) {\n  const parsedResponse = await getJson(`/repos/${fullName}/branches`);\n  const branches = parsedResponse.map(b => ({\n    name: b.name\n  }));\n  return branches;\n}\n\nasync function getJson(path) {\n  const response = await fetch(`https://api.github.com${path}`);\n  if (response.ok) return response.json();\n  else {\n    throw new Error(response.statusText);\n  }\n}\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport * as GitHub from \"./github\";\n\nconst styles = theme => ({\n  loading: {\n    marginTop: theme.spacing.unit * 8\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  }\n});\n\nclass BranchesList extends Component {\n  state = {\n    branches: [],\n    isLaoding: true,\n    errorMessage: \"\",\n    showError: false\n  };\n\n  componentDidMount() {\n    this.fetchBranches();\n  }\n\n  async fetchBranches() {\n    const { organization, repository } = this.props.match.params;\n    try {\n      const branches = await GitHub.repoBrnaches(\n        `${organization}/${repository}`\n      );\n      this.setState({ branches });\n    } catch (err) {\n      this.setState({ errorMessage: err.message, showError: true });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  hideError = () => this.setState({ errorMessage: \"\", showError: false });\n\n  render() {\n    const { branches, isLoading, errorMessage, showError } = this.state;\n    const { classes } = this.props;\n    return (\n      <Grid container justify=\"center\">\n        {isLoading ? (\n          <CircularProgress size={80} className={classes.loading} />\n        ) : (\n          <Grid item xs={12} md={6}>\n            <List>\n              {branches.map(branch => (\n                <ListItem button key={branch.name}>\n                  <ListItemText primary={branch.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Grid>\n        )}\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={showError}\n          autoHideDuration={2000}\n          onClose={this.hideError}\n        >\n          <SnackbarContent\n            className={classes.error}\n            aria-describedby=\"error-message-id\"\n            message={<span id=\"error-message-id\">{ errorMessage }</span>}\n            action={[\n              <IconButton\n                aria-label=\"Close\"\n                className={classes.close}\n                onClick={this.hideError}\n              >\n                <CloseIcon />\n              </IconButton>\n            ]}\n          />\n        </Snackbar>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(BranchesList);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport * as GitHub from './github';\n\n// Contants\nconst ALL_LANGUAGES = \"ALL_LANGUAGES\";\nconst organizations = [\"payworks\", \"microsoft\", \"google\", \"facebook\"];\n// Helper methods\nconst uniqueLanguages = repos =>\n  Array.from(new Set(repos.map(r => r.language)));\nconst filteredRepos = (repos, selectedLanguage) =>\n  selectedLanguage === ALL_LANGUAGES\n    ? repos\n    : repos.filter(repo => repo.language === selectedLanguage);\nconst sortedRepos = repos => repos.sort((a, b) => b.stars - a.stars);\n// Selectors\nconst reposSelector = ({ repos, selectedLanguage }) =>\n  sortedRepos(filteredRepos(repos, selectedLanguage));\nconst languagesSelector =  ({repos}) => uniqueLanguages(repos)\n// Styles\nconst styles = theme => ({\n  formControl: {\n    marginLeft: theme.spacing.unit * 4\n  }\n});\n\nclass RepositoriesControllers extends Component {\n  state = {\n    selectedOrg: organizations[0],\n    selectedLanguage: ALL_LANGUAGES,\n    repos: []\n  };\n\n  componentDidMount() {\n    this.fetchRepositories();\n  }\n\n  setOrganization = event => {\n    this.props.setDisplayedRepos([]);\n    this.setState(\n      {\n        selectedOrg: event.target.value,\n        selectedLanguage: ALL_LANGUAGES\n      },\n      this.fetchRepositories\n    );\n  };\n\n  setProcessedRepos = () => {\n    this.props.setDisplayedRepos(\n      reposSelector(this.state)\n    );\n  };\n\n  setLanguage = event => {\n    this.setState({ selectedLanguage: event.target.value }, this.setProcessedRepos);\n  };\n\n  async fetchRepositories() {\n    const repos = await GitHub.orgRepositories(this.state.selectedOrg)\n    this.setState(\n      {\n        selectedLanguage: ALL_LANGUAGES,\n        repos\n      },\n      this.setProcessedRepos\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { selectedOrg, selectedLanguage } = this.state;\n    return (\n      <>\n        <FormControl>\n          <Select value={selectedOrg} onChange={this.setOrganization}>\n            {organizations.map(org => (\n              <MenuItem value={org} key={org}>\n                {org}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Select value={selectedLanguage} onChange={this.setLanguage}>\n            <MenuItem value={ALL_LANGUAGES}>\n              <em>All</em>\n            </MenuItem>\n            {languagesSelector(this.state).map(language => (\n              <MenuItem value={language} key={language}>\n                {language}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(RepositoriesControllers);\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport RepositoriesList from \"./RepositoriesList\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport BranchesList from \"./BranchesList\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport RepositoriesControllers from \"./RepositoriesControllers\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass App extends Component {\n  state = {\n    displayedRepos: []\n  };\n\n  setDisplayedRepos = repos => {\n    this.setState({ displayedRepos: repos });\n  };\n\n  render() {\n    const { displayedRepos } = this.state;\n    return (\n      <Router>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Route\n              path=\"/:organization/:repository\"\n              render={props => (\n                <>\n                  <IconButton onClick={props.history.goBack}>\n                    <ArrowBackIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {`${props.match.params.organization}/${\n                      props.match.params.repository\n                    }`}\n                  </Typography>\n                </>\n              )}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <RepositoriesControllers\n                  {...props}\n                  setDisplayedRepos={this.setDisplayedRepos}\n                />\n              )}\n            />\n          </Toolbar>\n        </AppBar>\n        <Route\n          path=\"/:organization/:repository\"\n          render={props => <BranchesList {...props} />}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <RepositoriesList {...props} repositories={displayedRepos} />\n          )}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport pink from \"@material-ui/core/colors/pink\";\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: blue,\n    secondary: pink\n  }\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}